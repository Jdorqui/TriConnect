-- Eliminar la base de datos si ya existe
DROP DATABASE IF EXISTS chatterly;

-- Crear la base de datos
CREATE DATABASE chatterly;

-- Usar la base de datos
USE chatterly;

-- 1. Tabla usuarios
CREATE OR REPLACE TABLE usuarios (
    id_user INT PRIMARY KEY AUTO_INCREMENT,
    alias VARCHAR(50) NOT NULL,
    username VARCHAR(50) NOT NULL UNIQUE, -- Campo Ãºnico
    email VARCHAR(100) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    fecha_nacimiento DATE NOT NULL, -- Nuevo campo para fecha de nacimiento
    creation_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

ALTER TABLE usuarios ADD COLUMN terminos_aceptados TINYINT(1) NOT NULL DEFAULT 0;
ALTER TABLE usuarios ADD en_linea TINYINT(1) DEFAULT 0;
ALTER TABLE usuarios ADD COLUMN mytube VARCHAR(255) DEFAULT NULL;

-- 2. Tabla amigos
CREATE OR REPLACE TABLE amigos (
    id_user1 INT,
    id_user2 INT,
    fecha_amistad TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    estado VARCHAR(20),  -- Puede ser 'pendiente', 'aceptado', 'bloqueado', etc.
    PRIMARY KEY (id_user1, id_user2),
    FOREIGN KEY (id_user1) REFERENCES usuarios(id_user),
    FOREIGN KEY (id_user2) REFERENCES usuarios(id_user)
);

-- 3. Tabla mensajes
CREATE OR REPLACE TABLE mensajes (
    id_mensaje INT PRIMARY KEY AUTO_INCREMENT,
    id_emisor INT,
    id_receptor INT,
    contenido TEXT,
    fecha_envio TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    tipo VARCHAR(20),  -- Puede ser 'texto', 'foto', 'video', etc.
    FOREIGN KEY (id_emisor) REFERENCES usuarios(id_user),
    FOREIGN KEY (id_receptor) REFERENCES usuarios(id_user)
);